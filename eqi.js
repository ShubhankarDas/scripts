let A = [-2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0, -2147483647, 2147483647, 0];
function solution(data, length) {
  let pos = 0, left_sum = 0, right_sum = 0;

  let res=[];

  for(i = 0; i < length ; i++){
    right_sum = right_sum + data[i];
  }

  while(pos < length){
    if(pos === 0){
      left_sum = 0;
    }else{
      left_sum = left_sum + data[pos - 1];
    }

    if(pos === length-1){
      right_sum = 0;
    }else{
      right_sum = right_sum - data[pos];
    }
    if (left_sum === right_sum) {
      res.push(pos);
      // return pos;
    }
    pos++;
  }

  // return -1;
  return res;
}

console.log(solution(A, A.length));